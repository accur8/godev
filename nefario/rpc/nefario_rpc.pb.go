// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.20.3
// source: nefario_rpc.proto

//import "google/protobuf/empty.proto";

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transport int32

const (
	Transport_Transport_unspecified Transport = 0
	Transport_Transport_stderr      Transport = 1
	Transport_Transport_stdout      Transport = 2
	Transport_Transport_journalctl  Transport = 3
)

// Enum value maps for Transport.
var (
	Transport_name = map[int32]string{
		0: "Transport_unspecified",
		1: "Transport_stderr",
		2: "Transport_stdout",
		3: "Transport_journalctl",
	}
	Transport_value = map[string]int32{
		"Transport_unspecified": 0,
		"Transport_stderr":      1,
		"Transport_stdout":      2,
		"Transport_journalctl":  3,
	}
)

func (x Transport) Enum() *Transport {
	p := new(Transport)
	*p = x
	return p
}

func (x Transport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transport) Descriptor() protoreflect.EnumDescriptor {
	return file_nefario_rpc_proto_enumTypes[0].Descriptor()
}

func (Transport) Type() protoreflect.EnumType {
	return &file_nefario_rpc_proto_enumTypes[0]
}

func (x Transport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transport.Descriptor instead.
func (Transport) EnumDescriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{0}
}

type SystemdServiceStatus int32

const (
	SystemdServiceStatus_SystemdServiceStatus_Unspecified SystemdServiceStatus = 0
	SystemdServiceStatus_SystemdServiceStatus_Stopped     SystemdServiceStatus = 1
	SystemdServiceStatus_SystemdServiceStatus_Running     SystemdServiceStatus = 2
	SystemdServiceStatus_SystemdServiceStatus_Failed      SystemdServiceStatus = 3
	SystemdServiceStatus_SystemdServiceStatus_Unknown     SystemdServiceStatus = 4
)

// Enum value maps for SystemdServiceStatus.
var (
	SystemdServiceStatus_name = map[int32]string{
		0: "SystemdServiceStatus_Unspecified",
		1: "SystemdServiceStatus_Stopped",
		2: "SystemdServiceStatus_Running",
		3: "SystemdServiceStatus_Failed",
		4: "SystemdServiceStatus_Unknown",
	}
	SystemdServiceStatus_value = map[string]int32{
		"SystemdServiceStatus_Unspecified": 0,
		"SystemdServiceStatus_Stopped":     1,
		"SystemdServiceStatus_Running":     2,
		"SystemdServiceStatus_Failed":      3,
		"SystemdServiceStatus_Unknown":     4,
	}
)

func (x SystemdServiceStatus) Enum() *SystemdServiceStatus {
	p := new(SystemdServiceStatus)
	*p = x
	return p
}

func (x SystemdServiceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemdServiceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_nefario_rpc_proto_enumTypes[1].Descriptor()
}

func (SystemdServiceStatus) Type() protoreflect.EnumType {
	return &file_nefario_rpc_proto_enumTypes[1]
}

func (x SystemdServiceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemdServiceStatus.Descriptor instead.
func (SystemdServiceStatus) EnumDescriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{1}
}

type CrudAction int32

const (
	CrudAction_CrudAction_unspecified CrudAction = 0
	CrudAction_insert                 CrudAction = 1
	CrudAction_update                 CrudAction = 2 //  delete = 3;
)

// Enum value maps for CrudAction.
var (
	CrudAction_name = map[int32]string{
		0: "CrudAction_unspecified",
		1: "insert",
		2: "update",
	}
	CrudAction_value = map[string]int32{
		"CrudAction_unspecified": 0,
		"insert":                 1,
		"update":                 2,
	}
)

func (x CrudAction) Enum() *CrudAction {
	p := new(CrudAction)
	*p = x
	return p
}

func (x CrudAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CrudAction) Descriptor() protoreflect.EnumDescriptor {
	return file_nefario_rpc_proto_enumTypes[2].Descriptor()
}

func (CrudAction) Type() protoreflect.EnumType {
	return &file_nefario_rpc_proto_enumTypes[2]
}

func (x CrudAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CrudAction.Descriptor instead.
func (CrudAction) EnumDescriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{2}
}

type ProcessStartedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessUid          string     `protobuf:"bytes,1,opt,name=processUid,proto3" json:"processUid,omitempty"`
	ParentProcessRunUid string     `protobuf:"bytes,2,opt,name=parentProcessRunUid,proto3" json:"parentProcessRunUid,omitempty"`
	ProcessPid          int32      `protobuf:"varint,3,opt,name=processPid,proto3" json:"processPid,omitempty"`
	MinionUid           string     `protobuf:"bytes,4,opt,name=minionUid,proto3" json:"minionUid,omitempty"`
	ServiceUid          string     `protobuf:"bytes,5,opt,name=serviceUid,proto3" json:"serviceUid,omitempty"`
	StartedAt           *Timestamp `protobuf:"bytes,6,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	Command             []string   `protobuf:"bytes,7,rep,name=command,proto3" json:"command,omitempty"`
	Cwd                 string     `protobuf:"bytes,8,opt,name=cwd,proto3" json:"cwd,omitempty"`
	Env                 []string   `protobuf:"bytes,9,rep,name=env,proto3" json:"env,omitempty"`
	Category            string     `protobuf:"bytes,10,opt,name=category,proto3" json:"category,omitempty"`
	Channels            []string   `protobuf:"bytes,11,rep,name=channels,proto3" json:"channels,omitempty"`
	Controllable        bool       `protobuf:"varint,12,opt,name=controllable,proto3" json:"controllable,omitempty"`
	LaunchError         string     `protobuf:"bytes,13,opt,name=launchError,proto3" json:"launchError,omitempty"`
	Kind                string     `protobuf:"bytes,14,opt,name=kind,proto3" json:"kind,omitempty"`
	ExtraDataJsonStr    string     `protobuf:"bytes,15,opt,name=extraDataJsonStr,proto3" json:"extraDataJsonStr,omitempty"`
}

func (x *ProcessStartedRequest) Reset() {
	*x = ProcessStartedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStartedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStartedRequest) ProtoMessage() {}

func (x *ProcessStartedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStartedRequest.ProtoReflect.Descriptor instead.
func (*ProcessStartedRequest) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessStartedRequest) GetProcessUid() string {
	if x != nil {
		return x.ProcessUid
	}
	return ""
}

func (x *ProcessStartedRequest) GetParentProcessRunUid() string {
	if x != nil {
		return x.ParentProcessRunUid
	}
	return ""
}

func (x *ProcessStartedRequest) GetProcessPid() int32 {
	if x != nil {
		return x.ProcessPid
	}
	return 0
}

func (x *ProcessStartedRequest) GetMinionUid() string {
	if x != nil {
		return x.MinionUid
	}
	return ""
}

func (x *ProcessStartedRequest) GetServiceUid() string {
	if x != nil {
		return x.ServiceUid
	}
	return ""
}

func (x *ProcessStartedRequest) GetStartedAt() *Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ProcessStartedRequest) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ProcessStartedRequest) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *ProcessStartedRequest) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ProcessStartedRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ProcessStartedRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *ProcessStartedRequest) GetControllable() bool {
	if x != nil {
		return x.Controllable
	}
	return false
}

func (x *ProcessStartedRequest) GetLaunchError() string {
	if x != nil {
		return x.LaunchError
	}
	return ""
}

func (x *ProcessStartedRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ProcessStartedRequest) GetExtraDataJsonStr() string {
	if x != nil {
		return x.ExtraDataJsonStr
	}
	return ""
}

type UpdateMailboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessUid string `protobuf:"bytes,1,opt,name=processUid,proto3" json:"processUid,omitempty"`
	Mailbox    string `protobuf:"bytes,2,opt,name=mailbox,proto3" json:"mailbox,omitempty"`
}

func (x *UpdateMailboxRequest) Reset() {
	*x = UpdateMailboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMailboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMailboxRequest) ProtoMessage() {}

func (x *UpdateMailboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMailboxRequest.ProtoReflect.Descriptor instead.
func (*UpdateMailboxRequest) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateMailboxRequest) GetProcessUid() string {
	if x != nil {
		return x.ProcessUid
	}
	return ""
}

func (x *UpdateMailboxRequest) GetMailbox() string {
	if x != nil {
		return x.Mailbox
	}
	return ""
}

type ProcessPingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pings     []*ProcessPing `protobuf:"bytes,1,rep,name=pings,proto3" json:"pings,omitempty"`
	Timestamp *Timestamp     `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ProcessPingRequest) Reset() {
	*x = ProcessPingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPingRequest) ProtoMessage() {}

func (x *ProcessPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPingRequest.ProtoReflect.Descriptor instead.
func (*ProcessPingRequest) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessPingRequest) GetPings() []*ProcessPing {
	if x != nil {
		return x.Pings
	}
	return nil
}

func (x *ProcessPingRequest) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ProcessPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessUid   string            `protobuf:"bytes,1,opt,name=processUid,proto3" json:"processUid,omitempty"`
	ChannelSizes map[string]uint64 `protobuf:"bytes,2,rep,name=channelSizes,proto3" json:"channelSizes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProcessPing) Reset() {
	*x = ProcessPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPing) ProtoMessage() {}

func (x *ProcessPing) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPing.ProtoReflect.Descriptor instead.
func (*ProcessPing) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessPing) GetProcessUid() string {
	if x != nil {
		return x.ProcessUid
	}
	return ""
}

func (x *ProcessPing) GetChannelSizes() map[string]uint64 {
	if x != nil {
		return x.ChannelSizes
	}
	return nil
}

type ProcessCompletedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessUid  string     `protobuf:"bytes,1,opt,name=processUid,proto3" json:"processUid,omitempty"`
	ExitCode    int32      `protobuf:"varint,2,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	ExitMessage string     `protobuf:"bytes,3,opt,name=exitMessage,proto3" json:"exitMessage,omitempty"`
	CompletedAt *Timestamp `protobuf:"bytes,4,opt,name=completedAt,proto3" json:"completedAt,omitempty"`
}

func (x *ProcessCompletedRequest) Reset() {
	*x = ProcessCompletedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessCompletedRequest) ProtoMessage() {}

func (x *ProcessCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessCompletedRequest.ProtoReflect.Descriptor instead.
func (*ProcessCompletedRequest) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessCompletedRequest) GetProcessUid() string {
	if x != nil {
		return x.ProcessUid
	}
	return ""
}

func (x *ProcessCompletedRequest) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ProcessCompletedRequest) GetExitMessage() string {
	if x != nil {
		return x.ExitMessage
	}
	return ""
}

func (x *ProcessCompletedRequest) GetCompletedAt() *Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnixEpochMillis int64 `protobuf:"zigzag64,1,opt,name=unixEpochMillis,proto3" json:"unixEpochMillis,omitempty"`
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *Timestamp) GetUnixEpochMillis() int64 {
	if x != nil {
		return x.UnixEpochMillis
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ack) Reset() {
	*x = Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{6}
}

type MessageFromLaunchy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TestOneof:
	//
	//	*MessageFromLaunchy_ProcessStartedRequest
	//	*MessageFromLaunchy_ProcessPingRequest
	//	*MessageFromLaunchy_ProcessCompletedRequest
	//	*MessageFromLaunchy_StreamWrite
	//	*MessageFromLaunchy_UpdateMailboxRequest
	//	*MessageFromLaunchy_PingRequest
	TestOneof isMessageFromLaunchy_TestOneof `protobuf_oneof:"test_oneof"`
}

func (x *MessageFromLaunchy) Reset() {
	*x = MessageFromLaunchy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageFromLaunchy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageFromLaunchy) ProtoMessage() {}

func (x *MessageFromLaunchy) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageFromLaunchy.ProtoReflect.Descriptor instead.
func (*MessageFromLaunchy) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{7}
}

func (m *MessageFromLaunchy) GetTestOneof() isMessageFromLaunchy_TestOneof {
	if m != nil {
		return m.TestOneof
	}
	return nil
}

func (x *MessageFromLaunchy) GetProcessStartedRequest() *ProcessStartedRequest {
	if x, ok := x.GetTestOneof().(*MessageFromLaunchy_ProcessStartedRequest); ok {
		return x.ProcessStartedRequest
	}
	return nil
}

func (x *MessageFromLaunchy) GetProcessPingRequest() *ProcessPingRequest {
	if x, ok := x.GetTestOneof().(*MessageFromLaunchy_ProcessPingRequest); ok {
		return x.ProcessPingRequest
	}
	return nil
}

func (x *MessageFromLaunchy) GetProcessCompletedRequest() *ProcessCompletedRequest {
	if x, ok := x.GetTestOneof().(*MessageFromLaunchy_ProcessCompletedRequest); ok {
		return x.ProcessCompletedRequest
	}
	return nil
}

func (x *MessageFromLaunchy) GetStreamWrite() *StreamWrite {
	if x, ok := x.GetTestOneof().(*MessageFromLaunchy_StreamWrite); ok {
		return x.StreamWrite
	}
	return nil
}

func (x *MessageFromLaunchy) GetUpdateMailboxRequest() *UpdateMailboxRequest {
	if x, ok := x.GetTestOneof().(*MessageFromLaunchy_UpdateMailboxRequest); ok {
		return x.UpdateMailboxRequest
	}
	return nil
}

func (x *MessageFromLaunchy) GetPingRequest() *PingRequest {
	if x, ok := x.GetTestOneof().(*MessageFromLaunchy_PingRequest); ok {
		return x.PingRequest
	}
	return nil
}

type isMessageFromLaunchy_TestOneof interface {
	isMessageFromLaunchy_TestOneof()
}

type MessageFromLaunchy_ProcessStartedRequest struct {
	ProcessStartedRequest *ProcessStartedRequest `protobuf:"bytes,1,opt,name=processStartedRequest,proto3,oneof"`
}

type MessageFromLaunchy_ProcessPingRequest struct {
	ProcessPingRequest *ProcessPingRequest `protobuf:"bytes,2,opt,name=processPingRequest,proto3,oneof"`
}

type MessageFromLaunchy_ProcessCompletedRequest struct {
	ProcessCompletedRequest *ProcessCompletedRequest `protobuf:"bytes,3,opt,name=processCompletedRequest,proto3,oneof"`
}

type MessageFromLaunchy_StreamWrite struct {
	StreamWrite *StreamWrite `protobuf:"bytes,4,opt,name=streamWrite,proto3,oneof"`
}

type MessageFromLaunchy_UpdateMailboxRequest struct {
	UpdateMailboxRequest *UpdateMailboxRequest `protobuf:"bytes,5,opt,name=updateMailboxRequest,proto3,oneof"`
}

type MessageFromLaunchy_PingRequest struct {
	PingRequest *PingRequest `protobuf:"bytes,6,opt,name=pingRequest,proto3,oneof"`
}

func (*MessageFromLaunchy_ProcessStartedRequest) isMessageFromLaunchy_TestOneof() {}

func (*MessageFromLaunchy_ProcessPingRequest) isMessageFromLaunchy_TestOneof() {}

func (*MessageFromLaunchy_ProcessCompletedRequest) isMessageFromLaunchy_TestOneof() {}

func (*MessageFromLaunchy_StreamWrite) isMessageFromLaunchy_TestOneof() {}

func (*MessageFromLaunchy_UpdateMailboxRequest) isMessageFromLaunchy_TestOneof() {}

func (*MessageFromLaunchy_PingRequest) isMessageFromLaunchy_TestOneof() {}

type StreamWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessUid  string        `protobuf:"bytes,1,opt,name=processUid,proto3" json:"processUid,omitempty"`
	ChannelName string        `protobuf:"bytes,2,opt,name=channelName,proto3" json:"channelName,omitempty"`
	Record      *StreamRecord `protobuf:"bytes,3,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *StreamWrite) Reset() {
	*x = StreamWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWrite) ProtoMessage() {}

func (x *StreamWrite) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWrite.ProtoReflect.Descriptor instead.
func (*StreamWrite) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *StreamWrite) GetProcessUid() string {
	if x != nil {
		return x.ProcessUid
	}
	return ""
}

func (x *StreamWrite) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *StreamWrite) GetRecord() *StreamRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

type StreamRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sequence  uint64     `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Buffers   []*Buffer  `protobuf:"bytes,4,rep,name=buffers,proto3" json:"buffers,omitempty"`
}

func (x *StreamRecord) Reset() {
	*x = StreamRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRecord) ProtoMessage() {}

func (x *StreamRecord) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRecord.ProtoReflect.Descriptor instead.
func (*StreamRecord) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *StreamRecord) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StreamRecord) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *StreamRecord) GetBuffers() []*Buffer {
	if x != nil {
		return x.Buffers
	}
	return nil
}

type Buffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data      []byte     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Transport Transport  `protobuf:"varint,3,opt,name=transport,proto3,enum=nefario_rpc.Transport" json:"transport,omitempty"`
}

func (x *Buffer) Reset() {
	*x = Buffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Buffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Buffer) ProtoMessage() {}

func (x *Buffer) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Buffer.ProtoReflect.Descriptor instead.
func (*Buffer) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *Buffer) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Buffer) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Buffer) GetTransport() Transport {
	if x != nil {
		return x.Transport
	}
	return Transport_Transport_unspecified
}

type ListServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinionUid string `protobuf:"bytes,1,opt,name=minionUid,proto3" json:"minionUid,omitempty"`
}

func (x *ListServicesRequest) Reset() {
	*x = ListServicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesRequest) ProtoMessage() {}

func (x *ListServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesRequest.ProtoReflect.Descriptor instead.
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *ListServicesRequest) GetMinionUid() string {
	if x != nil {
		return x.MinionUid
	}
	return ""
}

type ListServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*ServiceRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *ListServicesResponse) Reset() {
	*x = ListServicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesResponse) ProtoMessage() {}

func (x *ListServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesResponse.ProtoReflect.Descriptor instead.
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *ListServicesResponse) GetRecords() []*ServiceRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type ServiceRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid           string           `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name          string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MinionUid     string           `protobuf:"bytes,3,opt,name=minionUid,proto3" json:"minionUid,omitempty"`
	MinionEnabled bool             `protobuf:"varint,4,opt,name=minionEnabled,proto3" json:"minionEnabled,omitempty"`
	UnitJson      *ServiceUnitJson `protobuf:"bytes,5,opt,name=unitJson,proto3" json:"unitJson,omitempty"`
}

func (x *ServiceRecord) Reset() {
	*x = ServiceRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRecord) ProtoMessage() {}

func (x *ServiceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRecord.ProtoReflect.Descriptor instead.
func (*ServiceRecord) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *ServiceRecord) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ServiceRecord) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceRecord) GetMinionUid() string {
	if x != nil {
		return x.MinionUid
	}
	return ""
}

func (x *ServiceRecord) GetMinionEnabled() bool {
	if x != nil {
		return x.MinionEnabled
	}
	return false
}

func (x *ServiceRecord) GetUnitJson() *ServiceUnitJson {
	if x != nil {
		return x.UnitJson
	}
	return nil
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *PingRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PingRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type ServiceUnitJson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          SystemdServiceStatus `protobuf:"varint,1,opt,name=status,proto3,enum=nefario_rpc.SystemdServiceStatus" json:"status,omitempty"`
	StatusSource    string               `protobuf:"bytes,2,opt,name=statusSource,proto3" json:"statusSource,omitempty"`
	UnitExists      bool                 `protobuf:"varint,3,opt,name=unitExists,proto3" json:"unitExists,omitempty"`
	UnitDescription string               `protobuf:"bytes,4,opt,name=unitDescription,proto3" json:"unitDescription,omitempty"`
	UnitName        string               `protobuf:"bytes,5,opt,name=unitName,proto3" json:"unitName,omitempty"`
}

func (x *ServiceUnitJson) Reset() {
	*x = ServiceUnitJson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceUnitJson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceUnitJson) ProtoMessage() {}

func (x *ServiceUnitJson) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceUnitJson.ProtoReflect.Descriptor instead.
func (*ServiceUnitJson) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *ServiceUnitJson) GetStatus() SystemdServiceStatus {
	if x != nil {
		return x.Status
	}
	return SystemdServiceStatus_SystemdServiceStatus_Unspecified
}

func (x *ServiceUnitJson) GetStatusSource() string {
	if x != nil {
		return x.StatusSource
	}
	return ""
}

func (x *ServiceUnitJson) GetUnitExists() bool {
	if x != nil {
		return x.UnitExists
	}
	return false
}

func (x *ServiceUnitJson) GetUnitDescription() string {
	if x != nil {
		return x.UnitDescription
	}
	return ""
}

func (x *ServiceUnitJson) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

type SystemdServiceRecordCrudRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrudActions []*SystemdServiceRecordCrud `protobuf:"bytes,1,rep,name=crudActions,proto3" json:"crudActions,omitempty"`
}

func (x *SystemdServiceRecordCrudRequest) Reset() {
	*x = SystemdServiceRecordCrudRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemdServiceRecordCrudRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemdServiceRecordCrudRequest) ProtoMessage() {}

func (x *SystemdServiceRecordCrudRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemdServiceRecordCrudRequest.ProtoReflect.Descriptor instead.
func (*SystemdServiceRecordCrudRequest) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *SystemdServiceRecordCrudRequest) GetCrudActions() []*SystemdServiceRecordCrud {
	if x != nil {
		return x.CrudActions
	}
	return nil
}

type SystemdServiceRecordCrudResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemdServiceRecordCrudResponse) Reset() {
	*x = SystemdServiceRecordCrudResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemdServiceRecordCrudResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemdServiceRecordCrudResponse) ProtoMessage() {}

func (x *SystemdServiceRecordCrudResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemdServiceRecordCrudResponse.ProtoReflect.Descriptor instead.
func (*SystemdServiceRecordCrudResponse) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{17}
}

type SystemdServiceRecordCrud struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action CrudAction     `protobuf:"varint,1,opt,name=action,proto3,enum=nefario_rpc.CrudAction" json:"action,omitempty"`
	Record *ServiceRecord `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *SystemdServiceRecordCrud) Reset() {
	*x = SystemdServiceRecordCrud{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nefario_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemdServiceRecordCrud) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemdServiceRecordCrud) ProtoMessage() {}

func (x *SystemdServiceRecordCrud) ProtoReflect() protoreflect.Message {
	mi := &file_nefario_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemdServiceRecordCrud.ProtoReflect.Descriptor instead.
func (*SystemdServiceRecordCrud) Descriptor() ([]byte, []int) {
	return file_nefario_rpc_proto_rawDescGZIP(), []int{18}
}

func (x *SystemdServiceRecordCrud) GetAction() CrudAction {
	if x != nil {
		return x.Action
	}
	return CrudAction_CrudAction_unspecified
}

func (x *SystemdServiceRecordCrud) GetRecord() *ServiceRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

var File_nefario_rpc_proto protoreflect.FileDescriptor

var file_nefario_rpc_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63,
	0x22, 0xf9, 0x03, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x55, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x75, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x77,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x77, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x6e, 0x76, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x73, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x50, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x22, 0x7a,
	0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x70,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69,
	0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xbe, 0x01, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x4e, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb1, 0x01, 0x0a, 0x17,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x66,
	0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x35, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a, 0x0f,
	0x75, 0x6e, 0x69, 0x78, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0f, 0x75, 0x6e, 0x69, 0x78, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x22, 0x05, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x22, 0x88, 0x04,
	0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x79, 0x12, 0x5a, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x51, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e,
	0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x66,
	0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x57, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69,
	0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x69, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b,
	0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x82, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x65, 0x66,
	0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x8f, 0x01,
	0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x34,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x2d, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x07, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x22,
	0x88, 0x01, 0x0a, 0x06, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69,
	0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x33, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x22,
	0x4c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72,
	0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xb3, 0x01,
	0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x55,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e,
	0x55, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x08, 0x75, 0x6e, 0x69,
	0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65,
	0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x4a,
	0x73, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xd6,
	0x01, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x4a, 0x73,
	0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x6e, 0x69, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x1f, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43,
	0x72, 0x75, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0b, 0x63, 0x72,
	0x75, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x43, 0x72, 0x75, 0x64, 0x52, 0x0b, 0x63, 0x72, 0x75, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x72, 0x75, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x18, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43,
	0x72, 0x75, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x72, 0x75, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2a, 0x6c, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74,
	0x64, 0x65, 0x72, 0x72, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x63, 0x74, 0x6c, 0x10, 0x03, 0x2a, 0xc3, 0x01, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x24, 0x0a, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x74,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x04, 0x2a, 0x40, 0x0a, 0x0a,
	0x43, 0x72, 0x75, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x72,
	0x75, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x02, 0x42, 0x1d,
	0x5a, 0x1b, 0x61, 0x63, 0x63, 0x75, 0x72, 0x38, 0x2e, 0x69, 0x6f, 0x2f, 0x67, 0x6f, 0x64, 0x65,
	0x76, 0x2f, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nefario_rpc_proto_rawDescOnce sync.Once
	file_nefario_rpc_proto_rawDescData = file_nefario_rpc_proto_rawDesc
)

func file_nefario_rpc_proto_rawDescGZIP() []byte {
	file_nefario_rpc_proto_rawDescOnce.Do(func() {
		file_nefario_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_nefario_rpc_proto_rawDescData)
	})
	return file_nefario_rpc_proto_rawDescData
}

var file_nefario_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_nefario_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_nefario_rpc_proto_goTypes = []interface{}{
	(Transport)(0),                           // 0: nefario_rpc.Transport
	(SystemdServiceStatus)(0),                // 1: nefario_rpc.SystemdServiceStatus
	(CrudAction)(0),                          // 2: nefario_rpc.CrudAction
	(*ProcessStartedRequest)(nil),            // 3: nefario_rpc.ProcessStartedRequest
	(*UpdateMailboxRequest)(nil),             // 4: nefario_rpc.UpdateMailboxRequest
	(*ProcessPingRequest)(nil),               // 5: nefario_rpc.ProcessPingRequest
	(*ProcessPing)(nil),                      // 6: nefario_rpc.ProcessPing
	(*ProcessCompletedRequest)(nil),          // 7: nefario_rpc.ProcessCompletedRequest
	(*Timestamp)(nil),                        // 8: nefario_rpc.Timestamp
	(*Ack)(nil),                              // 9: nefario_rpc.Ack
	(*MessageFromLaunchy)(nil),               // 10: nefario_rpc.MessageFromLaunchy
	(*StreamWrite)(nil),                      // 11: nefario_rpc.StreamWrite
	(*StreamRecord)(nil),                     // 12: nefario_rpc.StreamRecord
	(*Buffer)(nil),                           // 13: nefario_rpc.Buffer
	(*ListServicesRequest)(nil),              // 14: nefario_rpc.ListServicesRequest
	(*ListServicesResponse)(nil),             // 15: nefario_rpc.ListServicesResponse
	(*ServiceRecord)(nil),                    // 16: nefario_rpc.ServiceRecord
	(*PingRequest)(nil),                      // 17: nefario_rpc.PingRequest
	(*ServiceUnitJson)(nil),                  // 18: nefario_rpc.ServiceUnitJson
	(*SystemdServiceRecordCrudRequest)(nil),  // 19: nefario_rpc.SystemdServiceRecordCrudRequest
	(*SystemdServiceRecordCrudResponse)(nil), // 20: nefario_rpc.SystemdServiceRecordCrudResponse
	(*SystemdServiceRecordCrud)(nil),         // 21: nefario_rpc.SystemdServiceRecordCrud
	nil,                                      // 22: nefario_rpc.ProcessPing.ChannelSizesEntry
}
var file_nefario_rpc_proto_depIdxs = []int32{
	8,  // 0: nefario_rpc.ProcessStartedRequest.startedAt:type_name -> nefario_rpc.Timestamp
	6,  // 1: nefario_rpc.ProcessPingRequest.pings:type_name -> nefario_rpc.ProcessPing
	8,  // 2: nefario_rpc.ProcessPingRequest.timestamp:type_name -> nefario_rpc.Timestamp
	22, // 3: nefario_rpc.ProcessPing.channelSizes:type_name -> nefario_rpc.ProcessPing.ChannelSizesEntry
	8,  // 4: nefario_rpc.ProcessCompletedRequest.completedAt:type_name -> nefario_rpc.Timestamp
	3,  // 5: nefario_rpc.MessageFromLaunchy.processStartedRequest:type_name -> nefario_rpc.ProcessStartedRequest
	5,  // 6: nefario_rpc.MessageFromLaunchy.processPingRequest:type_name -> nefario_rpc.ProcessPingRequest
	7,  // 7: nefario_rpc.MessageFromLaunchy.processCompletedRequest:type_name -> nefario_rpc.ProcessCompletedRequest
	11, // 8: nefario_rpc.MessageFromLaunchy.streamWrite:type_name -> nefario_rpc.StreamWrite
	4,  // 9: nefario_rpc.MessageFromLaunchy.updateMailboxRequest:type_name -> nefario_rpc.UpdateMailboxRequest
	17, // 10: nefario_rpc.MessageFromLaunchy.pingRequest:type_name -> nefario_rpc.PingRequest
	12, // 11: nefario_rpc.StreamWrite.record:type_name -> nefario_rpc.StreamRecord
	8,  // 12: nefario_rpc.StreamRecord.timestamp:type_name -> nefario_rpc.Timestamp
	13, // 13: nefario_rpc.StreamRecord.buffers:type_name -> nefario_rpc.Buffer
	8,  // 14: nefario_rpc.Buffer.timestamp:type_name -> nefario_rpc.Timestamp
	0,  // 15: nefario_rpc.Buffer.transport:type_name -> nefario_rpc.Transport
	16, // 16: nefario_rpc.ListServicesResponse.records:type_name -> nefario_rpc.ServiceRecord
	18, // 17: nefario_rpc.ServiceRecord.unitJson:type_name -> nefario_rpc.ServiceUnitJson
	1,  // 18: nefario_rpc.ServiceUnitJson.status:type_name -> nefario_rpc.SystemdServiceStatus
	21, // 19: nefario_rpc.SystemdServiceRecordCrudRequest.crudActions:type_name -> nefario_rpc.SystemdServiceRecordCrud
	2,  // 20: nefario_rpc.SystemdServiceRecordCrud.action:type_name -> nefario_rpc.CrudAction
	16, // 21: nefario_rpc.SystemdServiceRecordCrud.record:type_name -> nefario_rpc.ServiceRecord
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_nefario_rpc_proto_init() }
func file_nefario_rpc_proto_init() {
	if File_nefario_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nefario_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStartedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMailboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessPingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessCompletedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageFromLaunchy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Buffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceUnitJson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemdServiceRecordCrudRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemdServiceRecordCrudResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nefario_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemdServiceRecordCrud); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nefario_rpc_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*MessageFromLaunchy_ProcessStartedRequest)(nil),
		(*MessageFromLaunchy_ProcessPingRequest)(nil),
		(*MessageFromLaunchy_ProcessCompletedRequest)(nil),
		(*MessageFromLaunchy_StreamWrite)(nil),
		(*MessageFromLaunchy_UpdateMailboxRequest)(nil),
		(*MessageFromLaunchy_PingRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nefario_rpc_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nefario_rpc_proto_goTypes,
		DependencyIndexes: file_nefario_rpc_proto_depIdxs,
		EnumInfos:         file_nefario_rpc_proto_enumTypes,
		MessageInfos:      file_nefario_rpc_proto_msgTypes,
	}.Build()
	File_nefario_rpc_proto = out.File
	file_nefario_rpc_proto_rawDesc = nil
	file_nefario_rpc_proto_goTypes = nil
	file_nefario_rpc_proto_depIdxs = nil
}
