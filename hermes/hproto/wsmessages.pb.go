// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.20.3
// source: wsmessages.proto

package hproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RpcFrameType int32

const (
	RpcFrameType_UnspecifiedRFT  RpcFrameType = 0
	RpcFrameType_Request         RpcFrameType = 1
	RpcFrameType_SuccessResponse RpcFrameType = 2
	RpcFrameType_ErrorResponse   RpcFrameType = 3
)

// Enum value maps for RpcFrameType.
var (
	RpcFrameType_name = map[int32]string{
		0: "UnspecifiedRFT",
		1: "Request",
		2: "SuccessResponse",
		3: "ErrorResponse",
	}
	RpcFrameType_value = map[string]int32{
		"UnspecifiedRFT":  0,
		"Request":         1,
		"SuccessResponse": 2,
		"ErrorResponse":   3,
	}
)

func (x RpcFrameType) Enum() *RpcFrameType {
	p := new(RpcFrameType)
	*p = x
	return p
}

func (x RpcFrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcFrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_wsmessages_proto_enumTypes[0].Descriptor()
}

func (RpcFrameType) Type() protoreflect.EnumType {
	return &file_wsmessages_proto_enumTypes[0]
}

func (x RpcFrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcFrameType.Descriptor instead.
func (RpcFrameType) EnumDescriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{0}
}

type ContentType int32

const (
	ContentType_UnspecifiedCT ContentType = 0
	ContentType_Protobuf      ContentType = 1
	ContentType_Json          ContentType = 2
	ContentType_Binary        ContentType = 3
	ContentType_Text          ContentType = 4
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "UnspecifiedCT",
		1: "Protobuf",
		2: "Json",
		3: "Binary",
		4: "Text",
	}
	ContentType_value = map[string]int32{
		"UnspecifiedCT": 0,
		"Protobuf":      1,
		"Json":          2,
		"Binary":        3,
		"Text":          4,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_wsmessages_proto_enumTypes[1].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_wsmessages_proto_enumTypes[1]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{1}
}

type MessageFromClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TestOneof:
	//
	//	*MessageFromClient_SendMessageRequest
	//	*MessageFromClient_FirstMessage
	//	*MessageFromClient_Ping
	//	*MessageFromClient_Pong
	//	*MessageFromClient_Notification
	//	*MessageFromClient_SubscribeRequest
	TestOneof isMessageFromClient_TestOneof `protobuf_oneof:"test_oneof"`
}

func (x *MessageFromClient) Reset() {
	*x = MessageFromClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageFromClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageFromClient) ProtoMessage() {}

func (x *MessageFromClient) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageFromClient.ProtoReflect.Descriptor instead.
func (*MessageFromClient) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{0}
}

func (m *MessageFromClient) GetTestOneof() isMessageFromClient_TestOneof {
	if m != nil {
		return m.TestOneof
	}
	return nil
}

func (x *MessageFromClient) GetSendMessageRequest() *SendMessageRequest {
	if x, ok := x.GetTestOneof().(*MessageFromClient_SendMessageRequest); ok {
		return x.SendMessageRequest
	}
	return nil
}

func (x *MessageFromClient) GetFirstMessage() *FirstMessage {
	if x, ok := x.GetTestOneof().(*MessageFromClient_FirstMessage); ok {
		return x.FirstMessage
	}
	return nil
}

func (x *MessageFromClient) GetPing() *Ping {
	if x, ok := x.GetTestOneof().(*MessageFromClient_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *MessageFromClient) GetPong() *Pong {
	if x, ok := x.GetTestOneof().(*MessageFromClient_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *MessageFromClient) GetNotification() *Notification {
	if x, ok := x.GetTestOneof().(*MessageFromClient_Notification); ok {
		return x.Notification
	}
	return nil
}

func (x *MessageFromClient) GetSubscribeRequest() *SubscribeRequest {
	if x, ok := x.GetTestOneof().(*MessageFromClient_SubscribeRequest); ok {
		return x.SubscribeRequest
	}
	return nil
}

type isMessageFromClient_TestOneof interface {
	isMessageFromClient_TestOneof()
}

type MessageFromClient_SendMessageRequest struct {
	SendMessageRequest *SendMessageRequest `protobuf:"bytes,1,opt,name=sendMessageRequest,proto3,oneof"`
}

type MessageFromClient_FirstMessage struct {
	FirstMessage *FirstMessage `protobuf:"bytes,2,opt,name=firstMessage,proto3,oneof"`
}

type MessageFromClient_Ping struct {
	Ping *Ping `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

type MessageFromClient_Pong struct {
	Pong *Pong `protobuf:"bytes,4,opt,name=pong,proto3,oneof"`
}

type MessageFromClient_Notification struct {
	Notification *Notification `protobuf:"bytes,5,opt,name=notification,proto3,oneof"`
}

type MessageFromClient_SubscribeRequest struct {
	SubscribeRequest *SubscribeRequest `protobuf:"bytes,6,opt,name=subscribeRequest,proto3,oneof"`
}

func (*MessageFromClient_SendMessageRequest) isMessageFromClient_TestOneof() {}

func (*MessageFromClient_FirstMessage) isMessageFromClient_TestOneof() {}

func (*MessageFromClient_Ping) isMessageFromClient_TestOneof() {}

func (*MessageFromClient_Pong) isMessageFromClient_TestOneof() {}

func (*MessageFromClient_Notification) isMessageFromClient_TestOneof() {}

func (*MessageFromClient_SubscribeRequest) isMessageFromClient_TestOneof() {}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{1}
}

func (x *Notification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MessageToClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TestOneof:
	//
	//	*MessageToClient_MessageEnvelope
	//	*MessageToClient_SendMessageResponse
	//	*MessageToClient_Ping
	//	*MessageToClient_Pong
	//	*MessageToClient_Notification
	//	*MessageToClient_SubscribeResponse
	TestOneof isMessageToClient_TestOneof `protobuf_oneof:"test_oneof"`
}

func (x *MessageToClient) Reset() {
	*x = MessageToClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageToClient) ProtoMessage() {}

func (x *MessageToClient) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageToClient.ProtoReflect.Descriptor instead.
func (*MessageToClient) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{2}
}

func (m *MessageToClient) GetTestOneof() isMessageToClient_TestOneof {
	if m != nil {
		return m.TestOneof
	}
	return nil
}

func (x *MessageToClient) GetMessageEnvelope() *MessageEnvelope {
	if x, ok := x.GetTestOneof().(*MessageToClient_MessageEnvelope); ok {
		return x.MessageEnvelope
	}
	return nil
}

func (x *MessageToClient) GetSendMessageResponse() *SendMessageResponse {
	if x, ok := x.GetTestOneof().(*MessageToClient_SendMessageResponse); ok {
		return x.SendMessageResponse
	}
	return nil
}

func (x *MessageToClient) GetPing() *Ping {
	if x, ok := x.GetTestOneof().(*MessageToClient_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *MessageToClient) GetPong() *Pong {
	if x, ok := x.GetTestOneof().(*MessageToClient_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *MessageToClient) GetNotification() *Notification {
	if x, ok := x.GetTestOneof().(*MessageToClient_Notification); ok {
		return x.Notification
	}
	return nil
}

func (x *MessageToClient) GetSubscribeResponse() *SubscribeResponse {
	if x, ok := x.GetTestOneof().(*MessageToClient_SubscribeResponse); ok {
		return x.SubscribeResponse
	}
	return nil
}

type isMessageToClient_TestOneof interface {
	isMessageToClient_TestOneof()
}

type MessageToClient_MessageEnvelope struct {
	MessageEnvelope *MessageEnvelope `protobuf:"bytes,1,opt,name=messageEnvelope,proto3,oneof"`
}

type MessageToClient_SendMessageResponse struct {
	SendMessageResponse *SendMessageResponse `protobuf:"bytes,2,opt,name=sendMessageResponse,proto3,oneof"`
}

type MessageToClient_Ping struct {
	Ping *Ping `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

type MessageToClient_Pong struct {
	Pong *Pong `protobuf:"bytes,4,opt,name=pong,proto3,oneof"`
}

type MessageToClient_Notification struct {
	Notification *Notification `protobuf:"bytes,5,opt,name=notification,proto3,oneof"`
}

type MessageToClient_SubscribeResponse struct {
	SubscribeResponse *SubscribeResponse `protobuf:"bytes,6,opt,name=subscribeResponse,proto3,oneof"`
}

func (*MessageToClient_MessageEnvelope) isMessageToClient_TestOneof() {}

func (*MessageToClient_SendMessageResponse) isMessageToClient_TestOneof() {}

func (*MessageToClient_Ping) isMessageToClient_TestOneof() {}

func (*MessageToClient_Pong) isMessageToClient_TestOneof() {}

func (*MessageToClient_Notification) isMessageToClient_TestOneof() {}

func (*MessageToClient_SubscribeResponse) isMessageToClient_TestOneof() {}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{3}
}

func (x *Ping) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{4}
}

func (x *Pong) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type MessageHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender         string        `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ContentType    ContentType   `protobuf:"varint,2,opt,name=contentType,proto3,enum=hermes.ContentType" json:"contentType,omitempty"`
	RpcHeader      *RpcHeader    `protobuf:"bytes,3,opt,name=rpcHeader,proto3" json:"rpcHeader,omitempty"`
	SenderSequence int64         `protobuf:"varint,4,opt,name=senderSequence,proto3" json:"senderSequence,omitempty"`
	ExtraHeaders   []*KeyValPair `protobuf:"bytes,200,rep,name=extraHeaders,proto3" json:"extraHeaders,omitempty"`
}

func (x *MessageHeader) Reset() {
	*x = MessageHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageHeader) ProtoMessage() {}

func (x *MessageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageHeader.ProtoReflect.Descriptor instead.
func (*MessageHeader) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{5}
}

func (x *MessageHeader) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MessageHeader) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_UnspecifiedCT
}

func (x *MessageHeader) GetRpcHeader() *RpcHeader {
	if x != nil {
		return x.RpcHeader
	}
	return nil
}

func (x *MessageHeader) GetSenderSequence() int64 {
	if x != nil {
		return x.SenderSequence
	}
	return 0
}

func (x *MessageHeader) GetExtraHeaders() []*KeyValPair {
	if x != nil {
		return x.ExtraHeaders
	}
	return nil
}

type SenderEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created int64 `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *SenderEnvelope) Reset() {
	*x = SenderEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderEnvelope) ProtoMessage() {}

func (x *SenderEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderEnvelope.ProtoReflect.Descriptor instead.
func (*SenderEnvelope) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{6}
}

func (x *SenderEnvelope) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type ServerEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence       uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Created        int64  `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	Channel        string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	SubscriptionId string `protobuf:"bytes,4,opt,name=subscriptionId,proto3" json:"subscriptionId,omitempty"`
}

func (x *ServerEnvelope) Reset() {
	*x = ServerEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerEnvelope) ProtoMessage() {}

func (x *ServerEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerEnvelope.ProtoReflect.Descriptor instead.
func (*ServerEnvelope) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{7}
}

func (x *ServerEnvelope) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *ServerEnvelope) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ServerEnvelope) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ServerEnvelope) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type KeyValPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *KeyValPair) Reset() {
	*x = KeyValPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValPair) ProtoMessage() {}

func (x *KeyValPair) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValPair.ProtoReflect.Descriptor instead.
func (*KeyValPair) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{8}
}

func (x *KeyValPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValPair) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type RpcHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string        `protobuf:"bytes,2,opt,name=correlationId,proto3" json:"correlationId,omitempty"`
	EndPoint      string        `protobuf:"bytes,3,opt,name=endPoint,proto3" json:"endPoint,omitempty"`
	FrameType     RpcFrameType  `protobuf:"varint,4,opt,name=frameType,proto3,enum=hermes.RpcFrameType" json:"frameType,omitempty"`
	ErrorInfo     *RpcErrorInfo `protobuf:"bytes,5,opt,name=errorInfo,proto3" json:"errorInfo,omitempty"`
}

func (x *RpcHeader) Reset() {
	*x = RpcHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHeader) ProtoMessage() {}

func (x *RpcHeader) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHeader.ProtoReflect.Descriptor instead.
func (*RpcHeader) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{9}
}

func (x *RpcHeader) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *RpcHeader) GetEndPoint() string {
	if x != nil {
		return x.EndPoint
	}
	return ""
}

func (x *RpcHeader) GetFrameType() RpcFrameType {
	if x != nil {
		return x.FrameType
	}
	return RpcFrameType_UnspecifiedRFT
}

func (x *RpcHeader) GetErrorInfo() *RpcErrorInfo {
	if x != nil {
		return x.ErrorInfo
	}
	return nil
}

type RpcErrorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode  uint32 `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	StackTrace string `protobuf:"bytes,3,opt,name=stackTrace,proto3" json:"stackTrace,omitempty"`
}

func (x *RpcErrorInfo) Reset() {
	*x = RpcErrorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcErrorInfo) ProtoMessage() {}

func (x *RpcErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcErrorInfo.ProtoReflect.Descriptor instead.
func (*RpcErrorInfo) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{10}
}

func (x *RpcErrorInfo) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *RpcErrorInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RpcErrorInfo) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header         *MessageHeader  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	SenderEnvelope *SenderEnvelope `protobuf:"bytes,2,opt,name=senderEnvelope,proto3" json:"senderEnvelope,omitempty"`
	ServerEnvelope *ServerEnvelope `protobuf:"bytes,3,opt,name=serverEnvelope,proto3" json:"serverEnvelope,omitempty"`
	Data           []byte          `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{11}
}

func (x *Message) GetHeader() *MessageHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Message) GetSenderEnvelope() *SenderEnvelope {
	if x != nil {
		return x.SenderEnvelope
	}
	return nil
}

func (x *Message) GetServerEnvelope() *ServerEnvelope {
	if x != nil {
		return x.ServerEnvelope
	}
	return nil
}

func (x *Message) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MessageEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageBytes   []byte          `protobuf:"bytes,1,opt,name=messageBytes,proto3" json:"messageBytes,omitempty"`
	ServerEnvelope *ServerEnvelope `protobuf:"bytes,2,opt,name=serverEnvelope,proto3" json:"serverEnvelope,omitempty"`
}

func (x *MessageEnvelope) Reset() {
	*x = MessageEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEnvelope) ProtoMessage() {}

func (x *MessageEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEnvelope.ProtoReflect.Descriptor instead.
func (*MessageEnvelope) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{12}
}

func (x *MessageEnvelope) GetMessageBytes() []byte {
	if x != nil {
		return x.MessageBytes
	}
	return nil
}

func (x *MessageEnvelope) GetServerEnvelope() *ServerEnvelope {
	if x != nil {
		return x.ServerEnvelope
	}
	return nil
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To           []string `protobuf:"bytes,1,rep,name=to,proto3" json:"to,omitempty"`
	Message      *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Channel      string   `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	IdempotentId string   `protobuf:"bytes,4,opt,name=idempotentId,proto3" json:"idempotentId,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{13}
}

func (x *SendMessageRequest) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SendMessageRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SendMessageRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *SendMessageRequest) GetIdempotentId() string {
	if x != nil {
		return x.IdempotentId
	}
	return ""
}

type SendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors        []*SendMessageError `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	Duplicates    []string            `protobuf:"bytes,2,rep,name=duplicates,proto3" json:"duplicates,omitempty"`
	IdempotentId  string              `protobuf:"bytes,3,opt,name=idempotentId,proto3" json:"idempotentId,omitempty"`
	CorrelationId string              `protobuf:"bytes,4,opt,name=correlationId,proto3" json:"correlationId,omitempty"`
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{14}
}

func (x *SendMessageResponse) GetErrors() []*SendMessageError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *SendMessageResponse) GetDuplicates() []string {
	if x != nil {
		return x.Duplicates
	}
	return nil
}

func (x *SendMessageResponse) GetIdempotentId() string {
	if x != nil {
		return x.IdempotentId
	}
	return ""
}

func (x *SendMessageResponse) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

type SendReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request        *SendMessageRequest  `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Response       *SendMessageResponse `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	ServerEnvelope *ServerEnvelope      `protobuf:"bytes,3,opt,name=serverEnvelope,proto3" json:"serverEnvelope,omitempty"`
}

func (x *SendReceipt) Reset() {
	*x = SendReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReceipt) ProtoMessage() {}

func (x *SendReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReceipt.ProtoReflect.Descriptor instead.
func (*SendReceipt) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{15}
}

func (x *SendReceipt) GetRequest() *SendMessageRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *SendReceipt) GetResponse() *SendMessageResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *SendReceipt) GetServerEnvelope() *ServerEnvelope {
	if x != nil {
		return x.ServerEnvelope
	}
	return nil
}

type SendMessageError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	To      string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *SendMessageError) Reset() {
	*x = SendMessageError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageError) ProtoMessage() {}

func (x *SendMessageError) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageError.ProtoReflect.Descriptor instead.
func (*SendMessageError) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{16}
}

func (x *SendMessageError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendMessageError) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type FirstMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderInfo         *SenderInfo     `protobuf:"bytes,1,opt,name=senderInfo,proto3" json:"senderInfo,omitempty"`
	MailboxTimeoutInMs uint32          `protobuf:"varint,2,opt,name=mailboxTimeoutInMs,proto3" json:"mailboxTimeoutInMs,omitempty"`
	Subscriptions      []*Subscription `protobuf:"bytes,3,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *FirstMessage) Reset() {
	*x = FirstMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstMessage) ProtoMessage() {}

func (x *FirstMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstMessage.ProtoReflect.Descriptor instead.
func (*FirstMessage) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{17}
}

func (x *FirstMessage) GetSenderInfo() *SenderInfo {
	if x != nil {
		return x.SenderInfo
	}
	return nil
}

func (x *FirstMessage) GetMailboxTimeoutInMs() uint32 {
	if x != nil {
		return x.MailboxTimeoutInMs
	}
	return 0
}

func (x *FirstMessage) GetSubscriptions() []*Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type SenderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReaderKey string `protobuf:"bytes,1,opt,name=readerKey,proto3" json:"readerKey,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *SenderInfo) Reset() {
	*x = SenderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SenderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SenderInfo) ProtoMessage() {}

func (x *SenderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SenderInfo.ProtoReflect.Descriptor instead.
func (*SenderInfo) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{18}
}

func (x *SenderInfo) GetReaderKey() string {
	if x != nil {
		return x.ReaderKey
	}
	return ""
}

func (x *SenderInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriptions []*Subscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{19}
}

func (x *SubscribeRequest) GetSubscriptions() []*Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succeeded []string          `protobuf:"bytes,1,rep,name=succeeded,proto3" json:"succeeded,omitempty"`
	Errors    []*SubscribeError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{20}
}

func (x *SubscribeResponse) GetSucceeded() []string {
	if x != nil {
		return x.Succeeded
	}
	return nil
}

func (x *SubscribeResponse) GetErrors() []*SubscribeError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type SubscribeError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State   string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SubscribeError) Reset() {
	*x = SubscribeError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeError) ProtoMessage() {}

func (x *SubscribeError) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeError.ProtoReflect.Descriptor instead.
func (*SubscribeError) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{21}
}

func (x *SubscribeError) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SubscribeError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TestOneof:
	//
	//	*Subscription_Mailbox
	//	*Subscription_Nefario
	//	*Subscription_ChangeDataCapture
	//	*Subscription_Unsubscribe
	TestOneof isSubscription_TestOneof `protobuf_oneof:"test_oneof"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{22}
}

func (m *Subscription) GetTestOneof() isSubscription_TestOneof {
	if m != nil {
		return m.TestOneof
	}
	return nil
}

func (x *Subscription) GetMailbox() *MailboxSubscription {
	if x, ok := x.GetTestOneof().(*Subscription_Mailbox); ok {
		return x.Mailbox
	}
	return nil
}

func (x *Subscription) GetNefario() *NefarioSubscription {
	if x, ok := x.GetTestOneof().(*Subscription_Nefario); ok {
		return x.Nefario
	}
	return nil
}

func (x *Subscription) GetChangeDataCapture() *ChangeDataCaptureSubscription {
	if x, ok := x.GetTestOneof().(*Subscription_ChangeDataCapture); ok {
		return x.ChangeDataCapture
	}
	return nil
}

func (x *Subscription) GetUnsubscribe() *Unsubscribe {
	if x, ok := x.GetTestOneof().(*Subscription_Unsubscribe); ok {
		return x.Unsubscribe
	}
	return nil
}

type isSubscription_TestOneof interface {
	isSubscription_TestOneof()
}

type Subscription_Mailbox struct {
	Mailbox *MailboxSubscription `protobuf:"bytes,1,opt,name=mailbox,proto3,oneof"`
}

type Subscription_Nefario struct {
	Nefario *NefarioSubscription `protobuf:"bytes,2,opt,name=nefario,proto3,oneof"`
}

type Subscription_ChangeDataCapture struct {
	ChangeDataCapture *ChangeDataCaptureSubscription `protobuf:"bytes,3,opt,name=changeDataCapture,proto3,oneof"`
}

type Subscription_Unsubscribe struct {
	Unsubscribe *Unsubscribe `protobuf:"bytes,4,opt,name=unsubscribe,proto3,oneof"`
}

func (*Subscription_Mailbox) isSubscription_TestOneof() {}

func (*Subscription_Nefario) isSubscription_TestOneof() {}

func (*Subscription_ChangeDataCapture) isSubscription_TestOneof() {}

func (*Subscription_Unsubscribe) isSubscription_TestOneof() {}

type MailboxSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State     string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	ReaderKey string `protobuf:"bytes,3,opt,name=readerKey,proto3" json:"readerKey,omitempty"`
	Channel   string `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	StartSeq  string `protobuf:"bytes,5,opt,name=startSeq,proto3" json:"startSeq,omitempty"`
}

func (x *MailboxSubscription) Reset() {
	*x = MailboxSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailboxSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailboxSubscription) ProtoMessage() {}

func (x *MailboxSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailboxSubscription.ProtoReflect.Descriptor instead.
func (*MailboxSubscription) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{23}
}

func (x *MailboxSubscription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MailboxSubscription) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *MailboxSubscription) GetReaderKey() string {
	if x != nil {
		return x.ReaderKey
	}
	return ""
}

func (x *MailboxSubscription) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *MailboxSubscription) GetStartSeq() string {
	if x != nil {
		return x.StartSeq
	}
	return ""
}

type ChangeDataCaptureSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State    string           `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Matchers []*RecordMatcher `protobuf:"bytes,3,rep,name=matchers,proto3" json:"matchers,omitempty"`
	StartSeq string           `protobuf:"bytes,4,opt,name=startSeq,proto3" json:"startSeq,omitempty"`
}

func (x *ChangeDataCaptureSubscription) Reset() {
	*x = ChangeDataCaptureSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeDataCaptureSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDataCaptureSubscription) ProtoMessage() {}

func (x *ChangeDataCaptureSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDataCaptureSubscription.ProtoReflect.Descriptor instead.
func (*ChangeDataCaptureSubscription) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{24}
}

func (x *ChangeDataCaptureSubscription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangeDataCaptureSubscription) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ChangeDataCaptureSubscription) GetMatchers() []*RecordMatcher {
	if x != nil {
		return x.Matchers
	}
	return nil
}

func (x *ChangeDataCaptureSubscription) GetStartSeq() string {
	if x != nil {
		return x.StartSeq
	}
	return ""
}

type RecordMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database    string            `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table       string            `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	PrimaryKeys []*structpb.Value `protobuf:"bytes,3,rep,name=primaryKeys,proto3" json:"primaryKeys,omitempty"`
}

func (x *RecordMatcher) Reset() {
	*x = RecordMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordMatcher) ProtoMessage() {}

func (x *RecordMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordMatcher.ProtoReflect.Descriptor instead.
func (*RecordMatcher) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{25}
}

func (x *RecordMatcher) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *RecordMatcher) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *RecordMatcher) GetPrimaryKeys() []*structpb.Value {
	if x != nil {
		return x.PrimaryKeys
	}
	return nil
}

type NefarioSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State      string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	ProcessUid string `protobuf:"bytes,3,opt,name=processUid,proto3" json:"processUid,omitempty"`
	Channel    string `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	StartSeq   string `protobuf:"bytes,5,opt,name=startSeq,proto3" json:"startSeq,omitempty"`
}

func (x *NefarioSubscription) Reset() {
	*x = NefarioSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NefarioSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NefarioSubscription) ProtoMessage() {}

func (x *NefarioSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NefarioSubscription.ProtoReflect.Descriptor instead.
func (*NefarioSubscription) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{26}
}

func (x *NefarioSubscription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NefarioSubscription) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *NefarioSubscription) GetProcessUid() string {
	if x != nil {
		return x.ProcessUid
	}
	return ""
}

func (x *NefarioSubscription) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *NefarioSubscription) GetStartSeq() string {
	if x != nil {
		return x.StartSeq
	}
	return ""
}

type Unsubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Unsubscribe) Reset() {
	*x = Unsubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unsubscribe) ProtoMessage() {}

func (x *Unsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unsubscribe.ProtoReflect.Descriptor instead.
func (*Unsubscribe) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{27}
}

func (x *Unsubscribe) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateMailboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channels             []string         `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	PrivateMetadata      *structpb.Struct `protobuf:"bytes,2,opt,name=privateMetadata,proto3" json:"privateMetadata,omitempty"`
	PublicMetadata       *structpb.Struct `protobuf:"bytes,3,opt,name=publicMetadata,proto3" json:"publicMetadata,omitempty"`
	PurgeTimeoutInMillis int64            `protobuf:"varint,4,opt,name=purgeTimeoutInMillis,proto3" json:"purgeTimeoutInMillis,omitempty"`
	CloseTimeoutInMillis int64            `protobuf:"varint,5,opt,name=closeTimeoutInMillis,proto3" json:"closeTimeoutInMillis,omitempty"`
	ExtraData            *structpb.Struct `protobuf:"bytes,6,opt,name=extraData,proto3" json:"extraData,omitempty"`
}

func (x *CreateMailboxRequest) Reset() {
	*x = CreateMailboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMailboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMailboxRequest) ProtoMessage() {}

func (x *CreateMailboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMailboxRequest.ProtoReflect.Descriptor instead.
func (*CreateMailboxRequest) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{28}
}

func (x *CreateMailboxRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *CreateMailboxRequest) GetPrivateMetadata() *structpb.Struct {
	if x != nil {
		return x.PrivateMetadata
	}
	return nil
}

func (x *CreateMailboxRequest) GetPublicMetadata() *structpb.Struct {
	if x != nil {
		return x.PublicMetadata
	}
	return nil
}

func (x *CreateMailboxRequest) GetPurgeTimeoutInMillis() int64 {
	if x != nil {
		return x.PurgeTimeoutInMillis
	}
	return 0
}

func (x *CreateMailboxRequest) GetCloseTimeoutInMillis() int64 {
	if x != nil {
		return x.CloseTimeoutInMillis
	}
	return 0
}

func (x *CreateMailboxRequest) GetExtraData() *structpb.Struct {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

type CreateMailboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminKey  string   `protobuf:"bytes,1,opt,name=adminKey,proto3" json:"adminKey,omitempty"`
	Address   string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ReaderKey string   `protobuf:"bytes,3,opt,name=readerKey,proto3" json:"readerKey,omitempty"`
	Channels  []string `protobuf:"bytes,4,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *CreateMailboxResponse) Reset() {
	*x = CreateMailboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMailboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMailboxResponse) ProtoMessage() {}

func (x *CreateMailboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMailboxResponse.ProtoReflect.Descriptor instead.
func (*CreateMailboxResponse) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{29}
}

func (x *CreateMailboxResponse) GetAdminKey() string {
	if x != nil {
		return x.AdminKey
	}
	return ""
}

func (x *CreateMailboxResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateMailboxResponse) GetReaderKey() string {
	if x != nil {
		return x.ReaderKey
	}
	return ""
}

func (x *CreateMailboxResponse) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

type AddChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminKey string   `protobuf:"bytes,1,opt,name=adminKey,proto3" json:"adminKey,omitempty"`
	Channels []string `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *AddChannelRequest) Reset() {
	*x = AddChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChannelRequest) ProtoMessage() {}

func (x *AddChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChannelRequest.ProtoReflect.Descriptor instead.
func (*AddChannelRequest) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{30}
}

func (x *AddChannelRequest) GetAdminKey() string {
	if x != nil {
		return x.AdminKey
	}
	return ""
}

func (x *AddChannelRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

type AddChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddChannelResponse) Reset() {
	*x = AddChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsmessages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChannelResponse) ProtoMessage() {}

func (x *AddChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wsmessages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChannelResponse.ProtoReflect.Descriptor instead.
func (*AddChannelResponse) Descriptor() ([]byte, []int) {
	return file_wsmessages_proto_rawDescGZIP(), []int{31}
}

var File_wsmessages_proto protoreflect.FileDescriptor

var file_wsmessages_proto_rawDesc = []byte{
	0x0a, 0x10, 0x77, 0x73, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf7, 0x02, 0x0a, 0x11, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x4c,
	0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x65, 0x72,
	0x6d, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x65, 0x72,
	0x6d, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x12, 0x3a, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x10,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x65,
	0x6f, 0x66, 0x22, 0x28, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x84, 0x03, 0x0a,
	0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x43, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x65, 0x72, 0x6d,
	0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x4f, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65,
	0x73, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x3a,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x11, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x6e,
	0x65, 0x6f, 0x66, 0x22, 0x20, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x20, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xf0, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x72, 0x70, 0x63, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x65,
	0x72, 0x6d, 0x65, 0x73, 0x2e, 0x52, 0x70, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x09,
	0x72, 0x70, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x37, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0xc8, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65,
	0x73, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0c, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x30, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x22, 0xb5, 0x01, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e,
	0x52, 0x70, 0x63, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x65, 0x72,
	0x6d, 0x65, 0x73, 0x2e, 0x52, 0x70, 0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x66, 0x0a, 0x0c, 0x52,
	0x70, 0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3e,
	0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x0e,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x3e,
	0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x75, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x65,
	0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x13, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6d, 0x70,
	0x6f, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xbc, 0x01,
	0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x34, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x0e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x10,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xae, 0x01, 0x0a, 0x0c, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x49, 0x6e, 0x4d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x69,
	0x6c, 0x62, 0x6f, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x4d, 0x73, 0x12,
	0x3a, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x44, 0x0a, 0x0a, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x4e, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68,
	0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x61, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65,
	0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x65, 0x64, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x22, 0x40, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62,
	0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65,
	0x73, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78,
	0x12, 0x37, 0x0a, 0x07, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4e, 0x65, 0x66, 0x61, 0x72,
	0x69, 0x6f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x07, 0x6e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x55, 0x0a, 0x11, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x37, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x69, 0x6c,
	0x62, 0x6f, 0x78, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x71, 0x22, 0x94, 0x01, 0x0a, 0x1d, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x71,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x71,
	0x22, 0x7b, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x91, 0x01,
	0x0a, 0x13, 0x4e, 0x65, 0x66, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x71, 0x22, 0x1d, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xd5, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x62,
	0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x75, 0x72,
	0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x70, 0x75, 0x72, 0x67, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x32, 0x0a,
	0x14, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x4d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x22, 0x4b, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22,
	0x14, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x57, 0x0a, 0x0c, 0x52, 0x70, 0x63, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x52, 0x46, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x03, 0x2a, 0x4e,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x54, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x4a, 0x73, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x10, 0x04, 0x32, 0xe9,
	0x01, 0x0a, 0x0d, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x45, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12,
	0x19, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x17, 0x2e, 0x68, 0x65, 0x72,
	0x6d, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x28, 0x01, 0x30, 0x01, 0x12, 0x4c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x12, 0x1c, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x19, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x19, 0x5a, 0x17, 0x61, 0x63,
	0x63, 0x75, 0x72, 0x38, 0x2e, 0x69, 0x6f, 0x2f, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2f, 0x68,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wsmessages_proto_rawDescOnce sync.Once
	file_wsmessages_proto_rawDescData = file_wsmessages_proto_rawDesc
)

func file_wsmessages_proto_rawDescGZIP() []byte {
	file_wsmessages_proto_rawDescOnce.Do(func() {
		file_wsmessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_wsmessages_proto_rawDescData)
	})
	return file_wsmessages_proto_rawDescData
}

var file_wsmessages_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_wsmessages_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_wsmessages_proto_goTypes = []interface{}{
	(RpcFrameType)(0),                     // 0: hermes.RpcFrameType
	(ContentType)(0),                      // 1: hermes.ContentType
	(*MessageFromClient)(nil),             // 2: hermes.MessageFromClient
	(*Notification)(nil),                  // 3: hermes.Notification
	(*MessageToClient)(nil),               // 4: hermes.MessageToClient
	(*Ping)(nil),                          // 5: hermes.Ping
	(*Pong)(nil),                          // 6: hermes.Pong
	(*MessageHeader)(nil),                 // 7: hermes.MessageHeader
	(*SenderEnvelope)(nil),                // 8: hermes.SenderEnvelope
	(*ServerEnvelope)(nil),                // 9: hermes.ServerEnvelope
	(*KeyValPair)(nil),                    // 10: hermes.KeyValPair
	(*RpcHeader)(nil),                     // 11: hermes.RpcHeader
	(*RpcErrorInfo)(nil),                  // 12: hermes.RpcErrorInfo
	(*Message)(nil),                       // 13: hermes.Message
	(*MessageEnvelope)(nil),               // 14: hermes.MessageEnvelope
	(*SendMessageRequest)(nil),            // 15: hermes.SendMessageRequest
	(*SendMessageResponse)(nil),           // 16: hermes.SendMessageResponse
	(*SendReceipt)(nil),                   // 17: hermes.SendReceipt
	(*SendMessageError)(nil),              // 18: hermes.SendMessageError
	(*FirstMessage)(nil),                  // 19: hermes.FirstMessage
	(*SenderInfo)(nil),                    // 20: hermes.SenderInfo
	(*SubscribeRequest)(nil),              // 21: hermes.SubscribeRequest
	(*SubscribeResponse)(nil),             // 22: hermes.SubscribeResponse
	(*SubscribeError)(nil),                // 23: hermes.SubscribeError
	(*Subscription)(nil),                  // 24: hermes.Subscription
	(*MailboxSubscription)(nil),           // 25: hermes.MailboxSubscription
	(*ChangeDataCaptureSubscription)(nil), // 26: hermes.ChangeDataCaptureSubscription
	(*RecordMatcher)(nil),                 // 27: hermes.RecordMatcher
	(*NefarioSubscription)(nil),           // 28: hermes.NefarioSubscription
	(*Unsubscribe)(nil),                   // 29: hermes.Unsubscribe
	(*CreateMailboxRequest)(nil),          // 30: hermes.CreateMailboxRequest
	(*CreateMailboxResponse)(nil),         // 31: hermes.CreateMailboxResponse
	(*AddChannelRequest)(nil),             // 32: hermes.AddChannelRequest
	(*AddChannelResponse)(nil),            // 33: hermes.AddChannelResponse
	(*structpb.Value)(nil),                // 34: google.protobuf.Value
	(*structpb.Struct)(nil),               // 35: google.protobuf.Struct
}
var file_wsmessages_proto_depIdxs = []int32{
	15, // 0: hermes.MessageFromClient.sendMessageRequest:type_name -> hermes.SendMessageRequest
	19, // 1: hermes.MessageFromClient.firstMessage:type_name -> hermes.FirstMessage
	5,  // 2: hermes.MessageFromClient.ping:type_name -> hermes.Ping
	6,  // 3: hermes.MessageFromClient.pong:type_name -> hermes.Pong
	3,  // 4: hermes.MessageFromClient.notification:type_name -> hermes.Notification
	21, // 5: hermes.MessageFromClient.subscribeRequest:type_name -> hermes.SubscribeRequest
	14, // 6: hermes.MessageToClient.messageEnvelope:type_name -> hermes.MessageEnvelope
	16, // 7: hermes.MessageToClient.sendMessageResponse:type_name -> hermes.SendMessageResponse
	5,  // 8: hermes.MessageToClient.ping:type_name -> hermes.Ping
	6,  // 9: hermes.MessageToClient.pong:type_name -> hermes.Pong
	3,  // 10: hermes.MessageToClient.notification:type_name -> hermes.Notification
	22, // 11: hermes.MessageToClient.subscribeResponse:type_name -> hermes.SubscribeResponse
	1,  // 12: hermes.MessageHeader.contentType:type_name -> hermes.ContentType
	11, // 13: hermes.MessageHeader.rpcHeader:type_name -> hermes.RpcHeader
	10, // 14: hermes.MessageHeader.extraHeaders:type_name -> hermes.KeyValPair
	0,  // 15: hermes.RpcHeader.frameType:type_name -> hermes.RpcFrameType
	12, // 16: hermes.RpcHeader.errorInfo:type_name -> hermes.RpcErrorInfo
	7,  // 17: hermes.Message.header:type_name -> hermes.MessageHeader
	8,  // 18: hermes.Message.senderEnvelope:type_name -> hermes.SenderEnvelope
	9,  // 19: hermes.Message.serverEnvelope:type_name -> hermes.ServerEnvelope
	9,  // 20: hermes.MessageEnvelope.serverEnvelope:type_name -> hermes.ServerEnvelope
	13, // 21: hermes.SendMessageRequest.message:type_name -> hermes.Message
	18, // 22: hermes.SendMessageResponse.errors:type_name -> hermes.SendMessageError
	15, // 23: hermes.SendReceipt.request:type_name -> hermes.SendMessageRequest
	16, // 24: hermes.SendReceipt.response:type_name -> hermes.SendMessageResponse
	9,  // 25: hermes.SendReceipt.serverEnvelope:type_name -> hermes.ServerEnvelope
	20, // 26: hermes.FirstMessage.senderInfo:type_name -> hermes.SenderInfo
	24, // 27: hermes.FirstMessage.subscriptions:type_name -> hermes.Subscription
	24, // 28: hermes.SubscribeRequest.subscriptions:type_name -> hermes.Subscription
	23, // 29: hermes.SubscribeResponse.errors:type_name -> hermes.SubscribeError
	25, // 30: hermes.Subscription.mailbox:type_name -> hermes.MailboxSubscription
	28, // 31: hermes.Subscription.nefario:type_name -> hermes.NefarioSubscription
	26, // 32: hermes.Subscription.changeDataCapture:type_name -> hermes.ChangeDataCaptureSubscription
	29, // 33: hermes.Subscription.unsubscribe:type_name -> hermes.Unsubscribe
	27, // 34: hermes.ChangeDataCaptureSubscription.matchers:type_name -> hermes.RecordMatcher
	34, // 35: hermes.RecordMatcher.primaryKeys:type_name -> google.protobuf.Value
	35, // 36: hermes.CreateMailboxRequest.privateMetadata:type_name -> google.protobuf.Struct
	35, // 37: hermes.CreateMailboxRequest.publicMetadata:type_name -> google.protobuf.Struct
	35, // 38: hermes.CreateMailboxRequest.extraData:type_name -> google.protobuf.Struct
	2,  // 39: hermes.HermesService.SendReceive:input_type -> hermes.MessageFromClient
	30, // 40: hermes.HermesService.CreateMailbox:input_type -> hermes.CreateMailboxRequest
	32, // 41: hermes.HermesService.AddChannel:input_type -> hermes.AddChannelRequest
	4,  // 42: hermes.HermesService.SendReceive:output_type -> hermes.MessageToClient
	31, // 43: hermes.HermesService.CreateMailbox:output_type -> hermes.CreateMailboxResponse
	33, // 44: hermes.HermesService.AddChannel:output_type -> hermes.AddChannelResponse
	42, // [42:45] is the sub-list for method output_type
	39, // [39:42] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_wsmessages_proto_init() }
func file_wsmessages_proto_init() {
	if File_wsmessages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wsmessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageFromClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageToClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcErrorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SenderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailboxSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeDataCaptureSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NefarioSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unsubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMailboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMailboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsmessages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_wsmessages_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MessageFromClient_SendMessageRequest)(nil),
		(*MessageFromClient_FirstMessage)(nil),
		(*MessageFromClient_Ping)(nil),
		(*MessageFromClient_Pong)(nil),
		(*MessageFromClient_Notification)(nil),
		(*MessageFromClient_SubscribeRequest)(nil),
	}
	file_wsmessages_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*MessageToClient_MessageEnvelope)(nil),
		(*MessageToClient_SendMessageResponse)(nil),
		(*MessageToClient_Ping)(nil),
		(*MessageToClient_Pong)(nil),
		(*MessageToClient_Notification)(nil),
		(*MessageToClient_SubscribeResponse)(nil),
	}
	file_wsmessages_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*Subscription_Mailbox)(nil),
		(*Subscription_Nefario)(nil),
		(*Subscription_ChangeDataCapture)(nil),
		(*Subscription_Unsubscribe)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wsmessages_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wsmessages_proto_goTypes,
		DependencyIndexes: file_wsmessages_proto_depIdxs,
		EnumInfos:         file_wsmessages_proto_enumTypes,
		MessageInfos:      file_wsmessages_proto_msgTypes,
	}.Build()
	File_wsmessages_proto = out.File
	file_wsmessages_proto_rawDesc = nil
	file_wsmessages_proto_goTypes = nil
	file_wsmessages_proto_depIdxs = nil
}
